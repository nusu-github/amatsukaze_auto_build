From cd3d017ff21867a4958027a0984c6c84a07ccdfe Mon Sep 17 00:00:00 2001
From: nusu-github <29514220+nusu-github@users.noreply.github.com>
Date: Wed, 9 Mar 2022 16:44:11 +0900
Subject: [PATCH] mpeg2dec: add DC table

---
 libavcodec/mpeg12dec.c        | 14 ++++++++++++++
 libavcodec/mpegpicture.c      |  9 +++++++++
 libavcodec/mpegpicture.h      |  3 +++
 libavcodec/mpegvideo.c        | 14 +++++++++++++-
 libavcodec/mpegvideo_parser.c | 17 ++++++++++++++++-
 libavformat/utils.c           | 14 ++++++++++++--
 libavutil/frame.h             |  5 +++++
 7 files changed, 72 insertions(+), 4 deletions(-)

diff --git a/libavcodec/mpeg12dec.c b/libavcodec/mpeg12dec.c
index 85e755d..9c3a63a 100644
--- a/libavcodec/mpeg12dec.c
+++ b/libavcodec/mpeg12dec.c
@@ -1852,6 +1852,20 @@ static int mpeg_decode_slice(MpegEncContext *s, int mb_y,
         s->dest[1] +=(16 >> lowres) >> s->chroma_x_shift;
         s->dest[2] +=(16 >> lowres) >> s->chroma_x_shift;
 
+        // make mb_dc_table
+        int mb_xy = s->mb_x + s->mb_y * s->mb_stride;
+        int mb_type = s->current_picture.mb_type[mb_xy];
+        if (!(mb_type & MB_TYPE_SKIP) && (mb_type & (7 | MB_TYPE_CBP))) {
+            int sum = 0;
+            for (int b = 0; b < 4; ++b) {
+                sum += FFABS(s->block[b][0]);
+            }
+            s->current_picture.mb_dc_table[mb_xy] = av_clip_uint8(sum >> (2 + 3));
+        }
+        else {
+            s->current_picture.mb_dc_table[mb_xy] = 0;
+        }
+
         ff_mpv_reconstruct_mb(s, s->block);
 
         if (++s->mb_x >= s->mb_width) {
diff --git a/libavcodec/mpegpicture.c b/libavcodec/mpegpicture.c
index 5fce25e..152b44c 100644
--- a/libavcodec/mpegpicture.c
+++ b/libavcodec/mpegpicture.c
@@ -46,6 +46,7 @@ do {\
     MAKE_WRITABLE(mbskip_table_buf);
     MAKE_WRITABLE(qscale_table_buf);
     MAKE_WRITABLE(mb_type_buf);
+    MAKE_WRITABLE(mb_dc_table_buf);
 
     for (i = 0; i < 2; i++) {
         MAKE_WRITABLE(motion_val_buf[i]);
@@ -199,6 +200,10 @@ static int alloc_picture_tables(AVCodecContext *avctx, Picture *pic, int encodin
     if (!pic->mbskip_table_buf || !pic->qscale_table_buf || !pic->mb_type_buf)
         return AVERROR(ENOMEM);
 
+    pic->mb_dc_table_buf = av_buffer_allocz(big_mb_num + mb_stride);
+    if (!pic->mb_dc_table_buf)
+        return AVERROR(ENOMEM);
+
     if (encoding) {
         pic->mb_var_buf    = av_buffer_allocz(mb_array_size * sizeof(int16_t));
         pic->mc_mb_var_buf = av_buffer_allocz(mb_array_size * sizeof(int16_t));
@@ -277,6 +282,7 @@ int ff_alloc_picture(AVCodecContext *avctx, Picture *pic, MotionEstContext *me,
     pic->mbskip_table = pic->mbskip_table_buf->data;
     pic->qscale_table = pic->qscale_table_buf->data + 2 * mb_stride + 1;
     pic->mb_type      = (uint32_t*)pic->mb_type_buf->data + 2 * mb_stride + 1;
+    pic->mb_dc_table  = pic->mb_dc_table_buf->data + 2 * mb_stride + 1;
 
     if (pic->motion_val_buf[0]) {
         for (i = 0; i < 2; i++) {
@@ -341,6 +347,7 @@ do {                                                                          \
     UPDATE_TABLE(mbskip_table_buf);
     UPDATE_TABLE(qscale_table_buf);
     UPDATE_TABLE(mb_type_buf);
+    UPDATE_TABLE(mb_dc_table_buf);
     for (i = 0; i < 2; i++) {
         UPDATE_TABLE(motion_val_buf[i]);
         UPDATE_TABLE(ref_index_buf[i]);
@@ -352,6 +359,7 @@ do {                                                                          \
     dst->mbskip_table  = src->mbskip_table;
     dst->qscale_table  = src->qscale_table;
     dst->mb_type       = src->mb_type;
+    dst->mb_dc_table   = src->mb_dc_table;
     for (i = 0; i < 2; i++) {
         dst->motion_val[i] = src->motion_val[i];
         dst->ref_index[i]  = src->ref_index[i];
@@ -475,6 +483,7 @@ void ff_free_picture_tables(Picture *pic)
     av_buffer_unref(&pic->mbskip_table_buf);
     av_buffer_unref(&pic->qscale_table_buf);
     av_buffer_unref(&pic->mb_type_buf);
+    av_buffer_unref(&pic->mb_dc_table_buf);
 
     for (i = 0; i < 2; i++) {
         av_buffer_unref(&pic->motion_val_buf[i]);
diff --git a/libavcodec/mpegpicture.h b/libavcodec/mpegpicture.h
index 2db3d67..4e102e5 100644
--- a/libavcodec/mpegpicture.h
+++ b/libavcodec/mpegpicture.h
@@ -49,6 +49,9 @@ typedef struct Picture {
     AVBufferRef *qscale_table_buf;
     int8_t *qscale_table;
 
+    AVBufferRef *mb_dc_table_buf;
+    uint8_t *mb_dc_table;
+
     AVBufferRef *motion_val_buf[2];
     int16_t (*motion_val[2])[2];
 
diff --git a/libavcodec/mpegvideo.c b/libavcodec/mpegvideo.c
index bf52dd7..7bce73d 100644
--- a/libavcodec/mpegvideo.c
+++ b/libavcodec/mpegvideo.c
@@ -1457,7 +1457,19 @@ int ff_mpv_export_qp_table(MpegEncContext *s, AVFrame *f, Picture *p, int qp_typ
     av_assert0(ref->size >= offset + s->mb_stride * ((f->height+15)/16));
     ref->size -= offset;
     ref->data += offset;
-    return av_frame_set_qp_table(f, ref, s->mb_stride, qp_type);
+    int ret = av_frame_set_qp_table(f, ref, s->mb_stride, qp_type);
+    if (ret)
+        return ret;
+
+    ref = av_buffer_ref(p->mb_dc_table_buf);
+    ref->size -= offset;
+    ref->data += offset;
+    if (!av_frame_new_side_data_from_buf(f, AV_FRAME_DATA_MB_DC_TABLE_DATA, ref)) {
+        av_buffer_unref(&ref);
+        return AVERROR(ENOMEM);
+    }
+
+    return 0;
 }
 
 static inline int hpel_motion_lowres(MpegEncContext *s,
diff --git a/libavcodec/mpegvideo_parser.c b/libavcodec/mpegvideo_parser.c
index c02cd7f..996cf8b 100644
--- a/libavcodec/mpegvideo_parser.c
+++ b/libavcodec/mpegvideo_parser.c
@@ -41,7 +41,7 @@ static void mpegvideo_extract_headers(AVCodecParserContext *s,
     uint32_t start_code;
     int frame_rate_index, ext_type, bytes_left;
     int frame_rate_ext_n, frame_rate_ext_d;
-    int top_field_first, repeat_first_field, progressive_frame;
+    int picture_structure, top_field_first, repeat_first_field, progressive_frame;
     int horiz_size_ext, vert_size_ext, bit_rate_ext;
     int did_set_size=0;
     int set_dim_ret = 0;
@@ -51,6 +51,7 @@ static void mpegvideo_extract_headers(AVCodecParserContext *s,
     enum AVPixelFormat pix_fmt = AV_PIX_FMT_NONE;
 //FIXME replace the crap with get_bits()
     s->repeat_pict = 0;
+    s->picture_structure = AV_PICTURE_STRUCTURE_UNKNOWN;
 
     while (buf < buf_end) {
         start_code= -1;
@@ -114,6 +115,7 @@ static void mpegvideo_extract_headers(AVCodecParserContext *s,
                     break;
                 case 0x8: /* picture coding extension */
                     if (bytes_left >= 5) {
+                        picture_structure = buf[2] & 0x03;
                         top_field_first = buf[3] & (1 << 7);
                         repeat_first_field = buf[3] & (1 << 1);
                         progressive_frame = buf[4] & (1 << 7);
@@ -138,6 +140,19 @@ static void mpegvideo_extract_headers(AVCodecParserContext *s,
                                 s->field_order = AV_FIELD_BB;
                         } else
                             s->field_order = AV_FIELD_PROGRESSIVE;
+
+                        switch (picture_structure)
+                        {
+                        case PICT_TOP_FIELD:
+                            s->picture_structure = AV_PICTURE_STRUCTURE_TOP_FIELD;
+                            break;
+                        case PICT_BOTTOM_FIELD:
+                            s->picture_structure = AV_PICTURE_STRUCTURE_BOTTOM_FIELD;
+                            break;
+                        case PICT_FRAME:
+                            s->picture_structure = AV_PICTURE_STRUCTURE_FRAME;
+                            break;
+                        }
                     }
                     break;
                 }
diff --git a/libavformat/utils.c b/libavformat/utils.c
index 3302651..829c0c5 100644
--- a/libavformat/utils.c
+++ b/libavformat/utils.c
@@ -812,8 +812,18 @@ static int update_wrap_reference(AVFormatContext *s, AVStream *st, int stream_in
         while (program) {
             if (program->pts_wrap_reference != pts_wrap_reference) {
                 for (i = 0; i<program->nb_stream_indexes; i++) {
-                    s->streams[program->stream_index[i]]->pts_wrap_reference = pts_wrap_reference;
-                    s->streams[program->stream_index[i]]->pts_wrap_behavior = pts_wrap_behavior;
+                    if (s->streams[program->stream_index[i]]->pts_wrap_reference != AV_NOPTS_VALUE &&
+                        (s->streams[program->stream_index[i]]->pts_wrap_reference - pts_wrap_reference > 1LL << st->pts_wrap_bits - 3 ||
+                         s->streams[program->stream_index[i]]->pts_wrap_reference < pts_wrap_reference))
+                    {
+                        pts_wrap_reference = s->streams[program->stream_index[i]]->pts_wrap_reference;
+                        pts_wrap_behavior = s->streams[program->stream_index[i]]->pts_wrap_behavior;
+                    }
+                    else
+                    {
+                        s->streams[program->stream_index[i]]->pts_wrap_reference = pts_wrap_reference;
+                        s->streams[program->stream_index[i]]->pts_wrap_behavior = pts_wrap_behavior;
+                    }
                 }
 
                 program->pts_wrap_reference = pts_wrap_reference;
diff --git a/libavutil/frame.h b/libavutil/frame.h
index fc67db0..199330a 100644
--- a/libavutil/frame.h
+++ b/libavutil/frame.h
@@ -157,6 +157,11 @@ enum AVFrameSideDataType {
      * av_frame_get_qp_table() to access this instead.
      */
     AV_FRAME_DATA_QP_TABLE_DATA,
+
+    /**
+     * DC values for each MBs. Size of table is same as QP table above.
+     */
+    AV_FRAME_DATA_MB_DC_TABLE_DATA,
 #endif
 
     /**
-- 
2.35.1.windows.2

