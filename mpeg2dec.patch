From 72c06018a1c0cc1e78a0c8dd4fc1fa9f8059e119 Mon Sep 17 00:00:00 2001
From: nusu-github <29514220+nusu-github@users.noreply.github.com>
Date: Mon, 7 Feb 2022 00:00:52 +0900
Subject: [PATCH] mpeg2dec: add DC table

---
 libavcodec/mpeg12dec.c   | 14 ++++++++++++++
 libavcodec/mpegpicture.c |  8 ++++++++
 libavcodec/mpegpicture.h |  3 +++
 libavcodec/mpegvideo.c   | 39 ++++++++++++++++-----------------------
 libavutil/frame.h        |  5 +++++
 5 files changed, 46 insertions(+), 23 deletions(-)

diff --git a/libavcodec/mpeg12dec.c b/libavcodec/mpeg12dec.c
index 09bf012..d490857 100644
--- a/libavcodec/mpeg12dec.c
+++ b/libavcodec/mpeg12dec.c
@@ -1845,6 +1845,20 @@ static int mpeg_decode_slice(MpegEncContext *s, int mb_y,
         s->dest[1] +=(16 >> lowres) >> s->chroma_x_shift;
         s->dest[2] +=(16 >> lowres) >> s->chroma_x_shift;
 
+        // make mb_dc_table
+        int mb_xy = s->mb_x + s->mb_y * s->mb_stride;
+        int mb_type = s->current_picture.mb_type[mb_xy];
+        if (!(mb_type & MB_TYPE_SKIP) && (mb_type & (7 | MB_TYPE_CBP))) {
+            int sum = 0;
+            for (int b = 0; b < 4; ++b) {
+                sum += FFABS(s->block[b][0]);
+            }
+            s->current_picture.mb_dc_table[mb_xy] = av_clip_uint8(sum >> (2 + 3));
+        }
+        else {
+            s->current_picture.mb_dc_table[mb_xy] = 0;
+        }
+
         ff_mpv_reconstruct_mb(s, s->block);
 
         if (++s->mb_x >= s->mb_width) {
diff --git a/libavcodec/mpegpicture.c b/libavcodec/mpegpicture.c
index 0652b7c..0c8e1e6 100644
--- a/libavcodec/mpegpicture.c
+++ b/libavcodec/mpegpicture.c
@@ -46,6 +46,7 @@ do {\
     MAKE_WRITABLE(mbskip_table_buf);
     MAKE_WRITABLE(qscale_table_buf);
     MAKE_WRITABLE(mb_type_buf);
+    MAKE_WRITABLE(mb_dc_table_buf);
 
     for (i = 0; i < 2; i++) {
         MAKE_WRITABLE(motion_val_buf[i]);
@@ -197,6 +198,10 @@ static int alloc_picture_tables(AVCodecContext *avctx, Picture *pic, int encodin
     if (!pic->mbskip_table_buf || !pic->qscale_table_buf || !pic->mb_type_buf)
         return AVERROR(ENOMEM);
 
+    pic->mb_dc_table_buf = av_buffer_allocz(big_mb_num + mb_stride);
+    if (!pic->mb_dc_table_buf)
+        return AVERROR(ENOMEM);
+
     if (encoding) {
         pic->mb_var_buf    = av_buffer_allocz(mb_array_size * sizeof(int16_t));
         pic->mc_mb_var_buf = av_buffer_allocz(mb_array_size * sizeof(int16_t));
@@ -273,6 +278,7 @@ int ff_alloc_picture(AVCodecContext *avctx, Picture *pic, MotionEstContext *me,
     pic->mbskip_table = pic->mbskip_table_buf->data;
     pic->qscale_table = pic->qscale_table_buf->data + 2 * mb_stride + 1;
     pic->mb_type      = (uint32_t*)pic->mb_type_buf->data + 2 * mb_stride + 1;
+    pic->mb_dc_table  = pic->mb_dc_table_buf->data + 2 * mb_stride + 1;
 
     if (pic->motion_val_buf[0]) {
         for (i = 0; i < 2; i++) {
@@ -340,6 +346,7 @@ int ff_update_picture_tables(Picture *dst, Picture *src)
     dst->mbskip_table  = src->mbskip_table;
     dst->qscale_table  = src->qscale_table;
     dst->mb_type       = src->mb_type;
+    dst->mb_dc_table   = src->mb_dc_table;
     for (i = 0; i < 2; i++) {
         dst->motion_val[i] = src->motion_val[i];
         dst->ref_index[i]  = src->ref_index[i];
@@ -464,6 +471,7 @@ void ff_free_picture_tables(Picture *pic)
     av_buffer_unref(&pic->mbskip_table_buf);
     av_buffer_unref(&pic->qscale_table_buf);
     av_buffer_unref(&pic->mb_type_buf);
+    av_buffer_unref(&pic->mb_dc_table_buf);
 
     for (i = 0; i < 2; i++) {
         av_buffer_unref(&pic->motion_val_buf[i]);
diff --git a/libavcodec/mpegpicture.h b/libavcodec/mpegpicture.h
index 4bcd666..039a4bb 100644
--- a/libavcodec/mpegpicture.h
+++ b/libavcodec/mpegpicture.h
@@ -49,6 +49,9 @@ typedef struct Picture {
     AVBufferRef *qscale_table_buf;
     int8_t *qscale_table;
 
+    AVBufferRef *mb_dc_table_buf;
+    uint8_t *mb_dc_table;
+
     AVBufferRef *motion_val_buf[2];
     int16_t (*motion_val[2])[2];
 
diff --git a/libavcodec/mpegvideo.c b/libavcodec/mpegvideo.c
index 5de0719..ae96e0e 100644
--- a/libavcodec/mpegvideo.c
+++ b/libavcodec/mpegvideo.c
@@ -1419,31 +1419,24 @@ void ff_print_debug_info(MpegEncContext *s, Picture *p, AVFrame *pict)
 
 int ff_mpv_export_qp_table(MpegEncContext *s, AVFrame *f, Picture *p, int qp_type)
 {
-    AVVideoEncParams *par;
-    int mult = (qp_type == FF_QSCALE_TYPE_MPEG1) ? 2 : 1;
-    unsigned int nb_mb = p->alloc_mb_height * p->alloc_mb_width;
-    unsigned int x, y;
-
-    if (!(s->avctx->export_side_data & AV_CODEC_EXPORT_DATA_VIDEO_ENC_PARAMS))
-        return 0;
-
-    par = av_video_enc_params_create_side_data(f, AV_VIDEO_ENC_PARAMS_MPEG2, nb_mb);
-    if (!par)
+    AVBufferRef *ref = av_buffer_ref(p->qscale_table_buf);
+    int offset = 2*s->mb_stride + 1;
+    if(!ref)
         return AVERROR(ENOMEM);
+    av_assert0(ref->size >= offset + s->mb_stride * ((f->height+15)/16));
+    ref->size -= offset;
+    ref->data += offset;
+    int ret = av_frame_set_qp_table(f, ref, s->mb_stride, qp_type);
+    if (ret)
+        return ret;
 
-    for (y = 0; y < p->alloc_mb_height; y++)
-        for (x = 0; x < p->alloc_mb_width; x++) {
-            const unsigned int block_idx = y * p->alloc_mb_width + x;
-            const unsigned int     mb_xy = y * p->alloc_mb_stride + x;
-            AVVideoBlockParams *b = av_video_enc_params_block(par, block_idx);
-
-            b->src_x = x * 16;
-            b->src_y = y * 16;
-            b->w     = 16;
-            b->h     = 16;
-
-            b->delta_qp = p->qscale_table[mb_xy] * mult;
-        }
+    ref = av_buffer_ref(p->mb_dc_table_buf);
+    ref->size -= offset;
+    ref->data += offset;
+    if (!av_frame_new_side_data_from_buf(f, AV_FRAME_DATA_MB_DC_TABLE_DATA, ref)) {
+        av_buffer_unref(&ref);
+        return AVERROR(ENOMEM);
+    }
 
     return 0;
 }
diff --git a/libavutil/frame.h b/libavutil/frame.h
index 7d1f8e2..ccb62b7 100644
--- a/libavutil/frame.h
+++ b/libavutil/frame.h
@@ -157,6 +157,11 @@ enum AVFrameSideDataType {
      * av_frame_get_qp_table() to access this instead.
      */
     AV_FRAME_DATA_QP_TABLE_DATA,
+
+    /**
+     * DC values for each MBs. Size of table is same as QP table above.
+     */
+    AV_FRAME_DATA_MB_DC_TABLE_DATA,
 #endif
 
     /**
-- 
2.34.1.windows.1

