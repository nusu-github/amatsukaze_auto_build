name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64

jobs:
  build:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: CUDA ToolKit install
        uses: Jimver/cuda-toolkit@v0.2.5
        with:
          method: "network"
          sub-packages: '["nvcc", "visual_studio_integration"]'

      - name: vcpkg library install
        run: |
          vcpkg integrate install
          vcpkg install lz4:x86-windows-static lz4:x64-windows-static

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: >-
            base-devel
            git

      # ビルド
      ## MSYS2使用
      ### FFmpeg ビルド
      - name: FFmpeg build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        shell: msys2 {0}
        run: |
          git clone --depth=1 https://github.com/nekopanda/FFmpeg.git -b amatsukaze
          cd FFmpeg
          ./configure --enable-gpl --disable-static --enable-shared --disable-all --disable-autodetect --disable-ffplay --disable-ffprobe

      ## MSBuild使用
      ### Ut Video Codec Suite ビルド 使用するライブラリーの位置:utvideo\x64\Release\utv_core.lib
      - name: Ut Video Codec Suite build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          git clone --depth=1 https://github.com/umezawatakeshi/utvideo.git
          cd utvideo
          msbuild utvideo.sln /m /t:utv_core:rebuild /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} /p:PostBuildEventUseInBuild=false

      ### AvisyntNeo ビルド 使用するライブラリーの位置:AviSynthPlus\build\Output\c_api\AviSynth.lib
      - name: AvisynthNeo build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          git clone --depth=1 https://github.com/nekopanda/AviSynthPlus.git
          mkdir AviSynthPlus/build
          cd AviSynthPlus/build
          cmake .. -G "Visual Studio 16 2019" -A x64
          msbuild AviSynth+.sln /m /t:rebuild /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}}

      ### Amatsukaze ビルド
      - name: Amatsukaze build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          git clone --depth=1 --recurse-submodules --shallow-submodules https://github.com/nekopanda/Amatsukaze.git
          mkdir Amatsukaze\lib\x64
          copy utvideo\x64\Release\utv_core.lib Amatsukaze\lib\x64\utv_core.lib
          copy AviSynthPlus\build\Output\c_api\AviSynth.lib Amatsukaze\lib\x64\AviSynth.lib
          cd Amatsukaze
          nuget restore ${{env.SOLUTION_FILE_PATH}}
          msbuild Amatsukaze.sln /m /t:Amatsukaze:rebuild /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} /p:WindowsTargetPlatformVersion=10 /p:PlatformToolset=v142

#    - name: Restore NuGet packages
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

#    - name: Build
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      # Add additional options to the MSBuild command line here (like platform or verbosity level).
#      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
#      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
